#   a118_turtles_in_traffic.py
#   Move turtles horizontally and vertically across screen.
#   Stopping turtles when they collide.
import turtle as trtl

# create two empty lists of turtles, adding to them later
horiz_turtles = []
vert_turtles = []

# use interesting shapes and colors
turtle_shapes = ["arrow", "turtle", "circle", "square", "triangle", "classic"]
horiz_colors = ["red", "blue", "green", "orange", "purple", "gold"]
vert_colors = ["darkred", "darkblue", "lime", "salmon", "indigo", "brown"]

tloc = 50
for s in turtle_shapes:

  ht = trtl.Turtle(shape=s)  #setting Ht to be turtle
  horiz_turtles.append(ht) # add ht to turtles list
  ht.penup()  # Make pen go up 
  new_color = horiz_colors.pop() # set color to new
  ht.fillcolor(new_color) # fill that color that was set from the list
  ht.goto(-350, tloc) # to (-350.50)
  ht.setheading(0) # Reset heading

  vt = trtl.Turtle(shape=s) 
  vert_turtles.append(vt)
  vt.penup()
  new_color = vert_colors.pop()
  vt.fillcolor(new_color)
  vt.goto( -tloc, 350)
  vt.setheading(270)
  
  tloc += 50

# TODO: move turtles across and down screen, stopping for collisions

###### code segment #####
for ht in horiz_turtles:
for vt in vert_turtles:
  

  
###### code segment #####
 if (abs(ht.xcor() - vt.xcor()) < 20):
 if (abs(ht.ycor() - vt.ycor()) < 20):


###### code segment #####
ht.forward(3)
vt.forward(3)



###### code segment #####
vert_turtles.remove(vt)
horiz_turtles.remove(ht) 




wn = trtl.Screen()
wn.mainloop()
